---
- name: Ensure docker compose packages are present
  tags:
    - docker_compose
  become: true
  ansible.builtin.dnf:
    enablerepo: docker-ce-stable
    name: "{{ docker_compose_packages }}"
    state: present

- name: Ensure docker-compose directory is present
  tags:
    - docker_compose
  become: true
  ansible.builtin.file:
    group: docker
    mode: '0750'
    owner: root
    path: "{{ docker_compose_dir }}"
    state: directory

- name: Ensure docker-compose project directories are present
  tags:
    - docker_compose
  become: true
  ansible.builtin.file:
    group: docker
    mode: '0750'
    owner: root
    path: "{{ docker_compose_dir }}/{{ _project.name }}"
    state: directory
  loop: "{{ docker_compose_projects }}"
  loop_control:
    label: "{{ _project.name | d(none) }}"
    loop_var: _project
  when:
    - _project.name is defined

- name: Ensure docker-compose project environments are present
  tags:
    - docker_compose
  become: true
  ansible.builtin.template:
    dest: "{{ docker_compose_dir }}/{{ _project.name }}/.env"
    group: docker
    mode: '0640'
    owner: root
    src: docker-compose.env.j2
  notify:
    - Restart docker-compose
  register: __docker_compose_env
  loop: "{{ docker_compose_projects }}"
  loop_control:
    label: "{{ _project.name }}"
    loop_var: _project
  when:
    - _project.env is defined
    - _project.env | length > 0
    - _project.name is defined

- name: Ensure docker-compose project services are present
  tags:
    - docker_compose
  become: true
  ansible.builtin.template:
    dest: "{{ docker_compose_dir }}/{{ _project.name }}/docker-compose.yml"
    group: docker
    mode: '0640'
    owner: root
    src: docker-compose.yml.j2
  notify:
    - Restart docker-compose
  register: __docker_compose_svc
  loop: "{{ docker_compose_projects }}"
  loop_control:
    label: "{{ _project.name }}"
    loop_var: _project
  when:
    - _project.name is defined

- name: Ensure docker-compose template results are formatted
  tags:
    - docker_compose
  ansible.builtin.set_fact:
    __docker_compose_changed:
      "{{ __docker_compose_changed |
          default([]) +
          [_result._project.name] }}"
  loop:
    "{{ __docker_compose_env.results +
        __docker_compose_svc.results }}"
  loop_control:
    label: "{{ _result._project.name | d(none) }}"
    loop_var: _result
  when:
    - _result._project.name is defined
    - _result.changed | bool

- name: Ensure docker-compose systemd unit is present
  tags:
    - docker_compose
  become: true
  ansible.builtin.template:
    dest: /usr/lib/systemd/system/docker-compose@.service
    group: root
    mode: '0644'
    owner: root
    src: docker-compose.systemd.j2

- name: Ensure docker-compose systemd settings are reloaded
  tags:
    - docker_compose
  become: true
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: Ensure docker-compose services are started and enabled on boot
  tags:
    - docker_compose
  become: true
  ansible.builtin.systemd_service:
    enabled: true
    name: "docker-compose@{{ _project.name }}.service"
    state: started
  loop: "{{ docker_compose_projects }}"
  loop_control:
    label: "{{ _project.name | d(none) }}"
    loop_var: _project
  when:
    - _project.name is defined
...
