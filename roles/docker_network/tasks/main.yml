---
- name: Ensure docker python packages are present
  tags:
    - docker_network
  become: true
  ansible.builtin.dnf:
    name: python3-requests
    state: present

- name: Ensure docker networks are managed
  tags:
    - docker_network
  community.docker.docker_network:
    api_version: "{{ _network.api_version | d(omit) }}"
    appends: "{{ _network.appends | d(false) }}"
    attachable: "{{ _network.attachable | d(omit) }}"
    connected: "{{ _network.connected | d(omit) }}"
    debug: "{{ _network.debug | d(false) }}"
    docker_host: "{{ _network.docker_host | d(omit) }}"
    driver: "{{ _network.driver | d('bridge') }}"
    driver_options: "{{ _network.driver_options | d(omit) }}"
    enable_ipv6: "{{ _network.enable_ipv6 | d(omit) }}"
    force: "{{ _network.force | d(false) }}"
    internal: "{{ _network.internal | d(omit) }}"
    ipam_config: "{{ _network.ipam_config | d(omit) }}"
    ipam_driver: "{{ _network.ipam_driver | d(omit) }}"
    ipam_driver_options: "{{ _network.ipam_driver_options | d(omit) }}"
    labels: "{{ _network.labels | d(omit) }}"
    name: "{{ _network.name }}"
    scope: "{{ _network.scope | d(omit) }}"
    ssl_version: "{{ _network.ssl_version | d(omit) }}"
    state: "{{ _network.state | d('present') }}"
    timeout: "{{ _network.timeout | d(60) }}"
    tls: "{{ _network.tls | d(false) }}"
    tls_hostname: "{{ _network.tls_hostname | d(omit) }}"
    use_ssh_client: "{{ _network.use_ssh_client | d(false) }}"
    validate_certs: "{{ _network.validate_certs | d(false) }}"
  loop: "{{ docker_network_list }}"
  loop_control:
    label: "{{ _network.name | d(none) }}"
    loop_var: _network
  when:
    - _network.name is defined
...
