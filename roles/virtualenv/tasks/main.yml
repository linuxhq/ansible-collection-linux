---
- name: Ensure virtual environments are present
  tags:
    - virtualenv
  become: "{{ virtualenv_become | bool }}"
  ansible.builtin.pip:
    chdir: "{{ _venv.chdir | default(omit) }}"
    editable: "{{ _venv.editable | default(false) }}"
    executable: "{{ _venv.executable | default(omit) }}"
    extra_args: --upgrade
    name:
      - pip
    state: present
    umask: "{{ _venv.umask | default(omit) }}"
    virtualenv: "{{ _venv.virtualenv }}"
    virtualenv_command: "{{ _venv.virtualenv_command | default('virtualenv') }}"
    virtualenv_python: "{{ _venv.virtualenv_python | default(omit) }}"
    virtualenv_site_packages: "{{ _venv.virtualenv_site_packages | default(false) }}"
  loop: "{{ virtualenvs }}"
  loop_control:
    label: "{{ _venv.virtualenv | default(none) }}"
    loop_var: _venv
  when:
    - _venv.virtualenv is defined

- name: Ensure virtual environments are populated
  tags:
    - virtualenv
  become: "{{ virtualenv_become | bool }}"
  ansible.builtin.pip:
    chdir: "{{ _venv.chdir | default(omit) }}"
    editable: "{{ _venv.editable | default(false) }}"
    executable: "{{ _venv.executable | default(omit) }}"
    extra_args: "{{ _venv.extra_args | default(omit) }}"
    name: "{{ _venv.name | default(omit) }}"
    requirements: "{{ _venv.requirements | default(omit) }}"
    state: present
    umask: "{{ _venv.umask | default(omit) }}"
    version: "{{ _venv.version | default(omit) }}"
    virtualenv: "{{ _venv.virtualenv }}"
    virtualenv_command: "{{ _venv.virtualenv_command | default('virtualenv') }}"
    virtualenv_python: "{{ _venv.virtualenv_python | default(omit) }}"
    virtualenv_site_packages: "{{ _venv.virtualenv_site_packages | default(false) }}"
  loop: "{{ virtualenvs }}"
  loop_control:
    label: "{{ _venv.virtualenv | default(none) }}"
    loop_var: _venv
  when:
    - _venv.virtualenv is defined
    - _venv.name is defined or
      _venv.requirements is defined
...
